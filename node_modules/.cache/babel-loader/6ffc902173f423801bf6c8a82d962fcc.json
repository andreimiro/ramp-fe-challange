{"ast":null,"code":"var _jsxFileName = \"/Users/andreimiro/Downloads/ramp-fe-challenge/src/components/Transactions/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n\n  let {\n    transactions\n  } = _ref;\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n  const [approvedStatus, setApprovedStatus] = useState({});\n  const setTransactionApproval = useCallback(async _ref2 => {\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n    await fetchWithoutCache(\"setTransactionApproval\", {\n      transactionId,\n      value: newValue\n    });\n    setApprovedStatus(prev => ({ ...prev,\n      [transactionId]: newValue\n    }));\n  }, [fetchWithoutCache]);\n\n  if (transactions === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: transactions.map(transaction => {\n      var _approvedStatus$trans;\n\n      return /*#__PURE__*/_jsxDEV(TransactionPane, {\n        transaction: transaction,\n        approved: (_approvedStatus$trans = approvedStatus[transaction.id]) !== null && _approvedStatus$trans !== void 0 ? _approvedStatus$trans : transaction.approved,\n        loading: loading,\n        setTransactionApproval: setTransactionApproval\n      }, transaction.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"F+3WnGwu1ovaVp9QhMJM9q8XT3s=\", false, function () {\n  return [useCustomFetch];\n});\n\n_c = Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","useState","useCustomFetch","TransactionPane","Transactions","transactions","fetchWithoutCache","loading","approvedStatus","setApprovedStatus","setTransactionApproval","transactionId","newValue","value","prev","map","transaction","id","approved"],"sources":["/Users/andreimiro/Downloads/ramp-fe-challenge/src/components/Transactions/index.tsx"],"sourcesContent":["import {useCallback, useState} from \"react\"\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\"\nimport { SetTransactionApprovalParams } from \"src/utils/types\"\nimport { TransactionPane } from \"./TransactionPane\"\nimport { SetTransactionApprovalFunction, TransactionsComponent,ApprovedStatusType } from \"./types\"\n\nexport const Transactions: TransactionsComponent = ({ transactions }) => {\n  const { fetchWithoutCache, loading } = useCustomFetch()\n    const [approvedStatus, setApprovedStatus] = useState<ApprovedStatusType>({});\n\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n      async ({ transactionId, newValue }) => {\n        await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n          transactionId,\n          value: newValue,\n        });\n        setApprovedStatus(prev => ({ ...prev, [transactionId]: newValue }));\n      },\n      [fetchWithoutCache]\n  )\n\n  if (transactions === null) {\n    return <div className=\"RampLoading--container\">Loading...</div>\n  }\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {transactions.map((transaction) => (\n          <TransactionPane\n              key={transaction.id}\n              transaction={transaction}\n              approved={approvedStatus[transaction.id] ?? transaction.approved}\n              loading={loading}\n              setTransactionApproval={setTransactionApproval}\n          />\n      ))}\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,SAAQA,WAAR,EAAqBC,QAArB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,eAAT,QAAgC,mBAAhC;;AAGA,OAAO,MAAMC,YAAmC,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACvE,MAAM;IAAEC,iBAAF;IAAqBC;EAArB,IAAiCL,cAAc,EAArD;EACE,MAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAqB,EAArB,CAApD;EAEF,MAAMS,sBAAsB,GAAGV,WAAW,CACtC,eAAuC;IAAA,IAAhC;MAAEW,aAAF;MAAiBC;IAAjB,CAAgC;IACrC,MAAMN,iBAAiB,CAAqC,wBAArC,EAA+D;MACpFK,aADoF;MAEpFE,KAAK,EAAED;IAF6E,CAA/D,CAAvB;IAIAH,iBAAiB,CAACK,IAAI,KAAK,EAAE,GAAGA,IAAL;MAAW,CAACH,aAAD,GAAiBC;IAA5B,CAAL,CAAL,CAAjB;EACD,CAPqC,EAQtC,CAACN,iBAAD,CARsC,CAA1C;;EAWA,IAAID,YAAY,KAAK,IAArB,EAA2B;IACzB,oBAAO;MAAK,SAAS,EAAC,wBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAK,eAAY,uBAAjB;IAAA,UACGA,YAAY,CAACU,GAAb,CAAkBC,WAAD;MAAA;;MAAA,oBACd,QAAC,eAAD;QAEI,WAAW,EAAEA,WAFjB;QAGI,QAAQ,2BAAER,cAAc,CAACQ,WAAW,CAACC,EAAb,CAAhB,yEAAoCD,WAAW,CAACE,QAH5D;QAII,OAAO,EAAEX,OAJb;QAKI,sBAAsB,EAAEG;MAL5B,GACSM,WAAW,CAACC,EADrB;QAAA;QAAA;QAAA;MAAA,QADc;IAAA,CAAjB;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAhCM;;GAAMb,Y;UAC4BF,c;;;KAD5BE,Y"},"metadata":{},"sourceType":"module"}